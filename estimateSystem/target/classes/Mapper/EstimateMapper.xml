<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="jp.co.interline.dao.EstimateMapper">
	<insert id="insertEstimateSheet1" parameterType="estimateSheet1DTO">
		insert into estimateSheet1 (
			documentNum,
			userNum,
			userName,
			userDepartment,
			userPosition,
			estimateDate,
			documentTypeNum,
			supplier,
			address,
			post,
			phoneNumber,
			representative,
			stamp,
			stampFileName,
			logoFileName,
			receiver,
			documentName,
			deadline,
			supplyPoint,
			expirationDate,
			payCondition,
			cautions,
			sum,
			tax,
			sumWithTax,
			sumWithTax2,	
			state,
			comment,
			workflowNum,
			updateDate,
			updater
		) 
		values
		(
			#{documentNum},
			#{userNum},
			#{userName},
			#{userDepartment},
			#{userPosition},
			#{estimateDate},
			#{documentTypeNum},
			#{supplier},
			#{address},
			#{post},
			#{phoneNumber},
			#{representative},
			#{stamp},
			#{stampFileName},
			#{logoFileName},
			#{receiver},
			#{documentName},
			#{deadline},
			#{supplyPoint},
			#{expirationDate},
			#{payCondition},
			#{cautions},
			#{sum},
			#{tax},
			#{sumWithTax},
			#{sumWithTax2},	
			#{state},
			#{comment},
			<choose>
				<when test="workflowNum == 0">
					null,
				</when>
				<when test="workflowNum != 0">
					#{workflowNum},
				</when>
			</choose>
			CURRENT_TIMESTAMP,
			#{updater}
		)
	</insert>
	<insert id="insertEstimateSheet1Items" parameterType="estimateSheet1ItemsRecieveDTO">
		insert into estimateSheet1Items (
			documentNum,rowNum,item,itemName,amount,unit,unitPrice,price
		)
		values
		(#{documentNum},#{rowNum1},#{item1},#{itemName1},${amount1},#{unit1},${unitPrice1},${price1}),
		(#{documentNum},#{rowNum2},#{item2},#{itemName2},${amount2},#{unit2},${unitPrice2},${price2}),
		(#{documentNum},#{rowNum3},#{item3},#{itemName3},${amount3},#{unit3},${unitPrice3},${price3}),
		(#{documentNum},#{rowNum4},#{item4},#{itemName4},${amount4},#{unit4},${unitPrice4},${price4}),
		(#{documentNum},#{rowNum5},#{item5},#{itemName5},${amount5},#{unit5},${unitPrice5},${price5}),
		(#{documentNum},#{rowNum6},#{item6},#{itemName6},${amount6},#{unit6},${unitPrice6},${price6}),
		(#{documentNum},#{rowNum7},#{item7},#{itemName7},${amount7},#{unit7},${unitPrice7},${price7}),
		(#{documentNum},#{rowNum8},#{item8},#{itemName8},${amount8},#{unit8},${unitPrice8},${price8}),
		(#{documentNum},#{rowNum9},#{item9},#{itemName9},${amount9},#{unit9},${unitPrice9},${price9}),
		(#{documentNum},#{rowNum10},#{item10},#{itemName10},${amount10},#{unit10},${unitPrice10},${price10}),
		(#{documentNum},#{rowNum11},#{item11},#{itemName11},${amount11},#{unit11},${unitPrice11},${price11}),
		(#{documentNum},#{rowNum12},#{item12},#{itemName12},${amount12},#{unit12},${unitPrice12},${price12})
	</insert>
	
	<select id="getTotalEstimateSheet" parameterType="userInformWithOptionDTO" resultType="int">
		select count(e.documentNum) from 
				(select documentNum, documentTypeNum, receiver, documentName, updateDate, userNum, userName, userDepartment, state from estimateSheet1) e
			left outer join
				(select documentNum, estimateNum, documentTypeNum, updateDate, userNum, userName, userDepartment, state from billSheet1) b
			on 
				(e.documentNum = b.estimateNum)
			<choose>
				<when test='auth == "u"'>
					where e.userNum=#{userNum} or b.userNum=#{userNum} or e.state='app' or b.state='app'
				</when>
				<when test='auth == "a"'>
					
				</when>
			</choose>
			order by ${option}
	</select>
	
	<select id="getEstimateList" parameterType="userInformWithOptionDTO" resultType="estimateListDTO">
		select
			e.documentNum documentNumE,
			e.documentTypeNum documentTypeNumE,
			e.documentTypeName documentTypeNameE,
			e.receiver,
			e.documentName,
			e.updateDate updateDateE,
			e.userNum userNumE,
			e.userName userNameE,
			e.userDepartment userDepartmentE,
			e.state stateE,
			se.name stateNameE,
			b.documentNum documentNumB,
			b.documentTypeNum documentTypeNumB,
			b.documentTypeName documentTypeNameB,
			b.updateDate updateDateB,
			b.userNum userNumB,
			b.userName userNameB,
			b.userDepartment userDepartmentB,
			b.state stateB,
			sb.name stateNameB
		from 
				(select documentNum, documentTypeNum, documentTypeName, receiver, documentName, updateDate, userNum, userName, userDepartment, state from estimateSheet1) e
			left outer join
				(select documentNum, estimateNum, documentTypeNum, documentTypeName, updateDate, userNum, userName, userDepartment, state from billSheet1) b
			on 
				(e.documentNum = b.estimateNum)
			
			left outer join
				documentState se
			on
				(e.state = se.state)
			
			left outer join
				documentState sb
			on
				(b.state = sb.state)
			<choose>
				<when test='auth == "u"'>
					where e.userNum=#{userNum} or b.userNum=#{userNum} or e.state='app' or b.state='app'
				</when>
				<when test='auth == "a"'>
					
				</when>
			</choose>
			order by ${option}
	</select>
	
	<update id="updateEstimateSheet1" parameterType="estimateSheet1DTO">
		update estimateSheet1 set
			userNum = #{userNum},
			userName = #{userName},
			userDepartment = #{userDepartment},
			userPosition = #{userPosition},
			estimateDate = #{estimateDate},
			documentTypeNum = #{documentTypeNum},
			supplier = #{supplier},
			address = #{address},
			post = #{post},
			phoneNumber = #{phoneNumber},
			representative = #{representative},
			stamp = #{stamp},
			stampFileName = #{stampFileName},
			logoFileName = #{logoFileName},
			receiver = #{receiver},
			documentName = #{documentName},
			deadline = #{deadline},
			supplyPoint = #{supplyPoint},
			expirationDate = #{expirationDate},
			payCondition = #{payCondition},
			cautions = #{cautions},
			sum = #{sum},
			tax = #{tax},
			sumWithTax = #{sumWithTax},
			sumWithTax2 = #{sumWithTax2},	
			state = #{state},
			comment = #{comment},
			workflowNum = 
				<choose>
					<when test="workflowNum == 0">
						null,
					</when>
					<when test="workflowNum != 0">
						#{workflowNum},
					</when>
				</choose>
			updateDate = CURRENT_TIMESTAMP,
			updater = #{updater}
		where
			documentNum = #{documentNum}
	</update>
	<update id="updateEstimateSheet1Items" parameterType="estimateSheet1ItemsRecieveDTO">
		update estimateSheet1Items set
			item = #{item1}, itemName = #{itemName1}, amount = ${amount1}, unit = #{unit1}, unitPrice = ${unitPrice1}, price = ${price1}
		where
			documentNum=#{documentNum} and rowNum = #{rowNum1};
			
		update estimateSheet1Items set
			item = #{item2}, itemName = #{itemName2}, amount = ${amount2}, unit = #{unit2}, unitPrice = ${unitPrice2}, price = ${price2}
		where
			documentNum=#{documentNum} and rowNum = #{rowNum2};
			
		update estimateSheet1Items set
			item = #{item3}, itemName = #{itemName3}, amount = ${amount3}, unit = #{unit3}, unitPrice = ${unitPrice3}, price = ${price3}
		where
			documentNum=#{documentNum} and rowNum = #{rowNum3};
			
		update estimateSheet1Items set
			item = #{item4}, itemName = #{itemName4}, amount = ${amount4}, unit = #{unit4}, unitPrice = ${unitPrice4}, price = ${price4}
		where
			documentNum=#{documentNum} and rowNum = #{rowNum4};
			
		update estimateSheet1Items set
			item = #{item5}, itemName = #{itemName5}, amount = ${amount5}, unit = #{unit5}, unitPrice = ${unitPrice5}, price = ${price5}
		where
			documentNum=#{documentNum} and rowNum = #{rowNum5};
			
		update estimateSheet1Items set
			item = #{item6}, itemName = #{itemName6}, amount = ${amount6}, unit = #{unit6}, unitPrice = ${unitPrice6}, price = ${price6}
		where
			documentNum=#{documentNum} and rowNum = #{rowNum6};
			
		update estimateSheet1Items set
			item = #{item7}, itemName = #{itemName7}, amount = ${amount7}, unit = #{unit7}, unitPrice = ${unitPrice7}, price = ${price7}
		where
			documentNum=#{documentNum} and rowNum = #{rowNum7};
			
		update estimateSheet1Items set
			item = #{item8}, itemName = #{itemName8}, amount = ${amount8}, unit = #{unit8}, unitPrice = ${unitPrice8}, price = ${price8}
		where
			documentNum=#{documentNum} and rowNum = #{rowNum8};
			
		update estimateSheet1Items set
			item = #{item9}, itemName = #{itemName9}, amount = ${amount9}, unit = #{unit9}, unitPrice = ${unitPrice9}, price = ${price9}
		where
			documentNum=#{documentNum} and rowNum = #{rowNum9};
			
		update estimateSheet1Items set
			item = #{item10}, itemName = #{itemName10}, amount = ${amount10}, unit = #{unit10}, unitPrice = ${unitPrice10}, price = ${price10}
		where
			documentNum=#{documentNum} and rowNum = #{rowNum10};
			
		update estimateSheet1Items set
			item = #{item11}, itemName = #{itemName11}, amount = ${amount11}, unit = #{unit11}, unitPrice = ${unitPrice11}, price = ${price11}
		where
			documentNum=#{documentNum} and rowNum = #{rowNum11};
		
		update estimateSheet1Items set
			item = #{item12}, itemName = #{itemName12}, amount = ${amount12}, unit = #{unit12}, unitPrice = ${unitPrice12}, price = ${price12}
		where
			documentNum=#{documentNum} and rowNum = #{rowNum12}
	</update>
	
	<delete id="deleteSheet" parameterType="systemDTO">
		delete from workflow where documentNum = #{documentNum};
		delete from workflow where documentNum = (select documentNum from billSheet1 where estimateNum = #{documentNum});
		delete from ${documentTypeName} where documentNum = #{documentNum};
	</delete>
	
	<select id="getEstimateSheet1ByDocumentNum" parameterType="String" resultType="estimateSheet1DTO">
		select state, userNum from estimateSheet1 where documentNum = #{value}
	</select>
</mapper>