<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="jp.co.interline.dao.EstimateMapper">

	<select id="getTotalEstimateSheet" parameterType="userInformWithOptionDTO" resultType="int">
		select
			count(e.documentNum)
		from
			(
				select d.*,em1.receiver,em1.documentName,ds.name stateName 
					from
						(select * from documentMaster where systemNum=1) d 
					join 
						estimateMaster em1 
					on 
						(d.documentNum = em1.documentNum)
					join
						documentState ds
					on
						(d.state = ds.state)
			) e
			<choose>
				<when test='auth == "u"'>
					where e.userNum=#{userNum}
				</when>
				<when test='auth == "a"'>
					
				</when>
			</choose>
			order by ${option}
	</select>
	
	<select id="getEstimateList" parameterType="userInformWithOptionDTO" resultType="estimateListDTO">
		select
			e.documentNum documentNumE,
			e.documentTypeName documentTypeNameE,
			e.nextDocumentTypeName nextDocumentTypeNameE,
			e.receiver receiverE,
			e.documentName documentNameE,
			e.updateDate updateDateE,
			e.userNum userNumE,
			e.userName userNameE,
			e.userDepartment userDepartmentE,
			e.userPosition userPositionE,
			e.state stateE,
			e.stateName stateNameE,
			e.approvedDate approvedDateE
		from
			(
				select d.*,em1.receiver,em1.documentName,ds.name stateName 
					from
						(select * from documentMaster where systemNum=1) d 
					join 
						estimateMaster em1 
					on 
						(d.documentNum = em1.documentNum)
					join
						documentState ds
					on
						(d.state = ds.state)
			) e
			<choose>
				<when test='auth == "u"'>
					where e.userNum=#{userNum}
				</when>
				<when test='auth == "a"'>
					
				</when>
			</choose>
			order by ${option}
	</select>
	
	<select id="getEstimate" parameterType="systemDTO" resultType="systemDTO">
		select d.state state, e.userNum userNum, s.systemName systemName from
			${documentTypeName} e
		join
			documentMaster d
		on
			(e.documentNum = d.documentNum)
		join
			systemType s
		on
			(d.systemNum = s.systemNum)
		where 
			e.documentNum = #{documentNum}
	</select>
	
	
	<select id="getBillNum" parameterType="String" resultType="String">
		select documentNum from estimateMaster where estimateNum = #{value}
	</select>
	
	<delete id="deleteSheet" parameterType="systemDTO">
		delete from documentMaster where documentNum = #{documentNum};
	</delete>
	
	<select id="getDocumentMaster" parameterType="String" resultType="documentMasterDTO">
		select * from documentMaster where documentNum = #{value}
	</select>
	
	<select id="getDocumentToHashMap" parameterType="documentMasterDTO" resultType="map">
		select * from ${documentTypeName} where documentNum = #{documentNum}
	</select>
	
	<select id="getItemsToList" parameterType="documentMasterDTO" resultType="map">
		select * from ${documentTypeName}items where documentNum = #{documentNum}
	</select>
	
	
	
	<insert id="insertMasterInform" parameterType="billCommonDTO">
		insert into documentMaster (
			documentNum,systemNum,documentTypeName,nextDocumentTypeName,
			userNum, userName, userDepartment, userPosition,
			workflowNum,
			state,updateDate,updater
		)
		values(
			#{documentNum},#{systemNum},#{documentTypeName},#{nextDocumentTypeName},
			#{userNum}, #{userName}, #{userDepartment}, #{userPosition},
			<choose>
				<when test="workflowNum == 0">null,</when>
				<when test="workflowNum != 0">#{workflowNum},</when>
			</choose>
			#{state},CURRENT_TIMESTAMP,#{updater}
		);
		
		insert into estimateMaster(
			documentNum,receiver,documentName
		)
		values(
			#{documentNum},#{receiver},#{documentName}
		);
	</insert>
	
	<update id="updateMasterInform" parameterType="billCommonDTO">
		update documentMaster set
			updateDate = CURRENT_TIMESTAMP,
			updater = #{updater}
		where
			documentNum = #{documentNum};
		
		update estimateMaster set
			receiver = #{receiver},
			documentName = #{documentName}
		where
			documentNum = #{documentNum}
	</update>
<!-- ///////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- //////////////////////////////////estimateSolution/////////////////////////////////////////////// -->
	<insert id="insertEstimateSolution" parameterType="estimateSolutionDTO">
		insert into estimateSolution (
			documentNum,documentTypeName,estimateDate,
			userNum, userName, userDepartment, userPosition,
			stamp, stampFileName, logoFileName,
			
			receiver,
			address,
			documentName,
			deadline,
			supplyPoint,
			expirationDate,
			payCondition,
			cautions,
			sum, taxRate, tax, sumWithTax, sumWithTax2,	
			comment
		) 
		values(
			#{documentNum},#{documentTypeName},#{estimateDate},
			#{userNum}, #{userName}, #{userDepartment}, #{userPosition},
			#{stamp}, #{stampFileName}, #{logoFileName},
			
			#{receiver},
			#{address},
			#{documentName},
			#{deadline},
			#{supplyPoint},
			#{expirationDate},
			#{payCondition},
			#{cautions},
			#{sum}, #{taxRate}, #{tax}, #{sumWithTax}, #{sumWithTax2},	
			#{comment}
		);
		
		insert into estimateSolutionItems (
			documentNum,rowNum,item,itemName,amount,unit,unitPrice,price
		)
		values
			<foreach collection="items" item="item" separator=",">
				(#{documentNum},#{item.rowNum},#{item.item},#{item.itemName},${item.amount},#{item.unit},${item.unitPrice},${item.price})
			</foreach>
	</insert>
	
	<update id="updateEstimateSolution" parameterType="estimateSolutionDTO">
		update estimateSolution set
			userNum = #{userNum},
			userName = #{userName},
			userDepartment = #{userDepartment},
			userPosition = #{userPosition},
			estimateDate = #{estimateDate},
			
			stamp = #{stamp},
			stampFileName = #{stampFileName},
			logoFileName = #{logoFileName},
			receiver = #{receiver},
			address = #{address},
			documentName = #{documentName},
			deadline = #{deadline},
			supplyPoint = #{supplyPoint},
			expirationDate = #{expirationDate},
			payCondition = #{payCondition},
			cautions = #{cautions},
			sum = #{sum},
			taxRate = #{taxRate},
			tax = #{tax},
			sumWithTax = #{sumWithTax},
			sumWithTax2 = #{sumWithTax2},	
			comment = #{comment},
			updateDate = CURRENT_TIMESTAMP,
			updater = #{updater}
		where
			documentNum = #{documentNum};
			
		<foreach collection="items" item="item">
			update estimateSolutionItems set
				item = #{item.item}, itemName = #{item.itemName}, amount = ${item.amount}, unit = #{item.unit}, unitPrice = ${item.unitPrice}, price = ${item.price}
			where documentNum=#{documentNum} and rowNum = #{item.rowNum};
		</foreach>	
	</update>
	
<!-- ///////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- //////////////////////////////////estimateLanguage/////////////////////////////////////////////// -->
	<insert id="insertEstimateLanguage" parameterType="estimateLanguageDTO">
		insert into estimateLanguage (
			documentNum,documentTypeName,estimateDate,
			userNum, userName, userDepartment, userPosition,
			stamp, stampFileName, logoFileName,
			receiver,
			address,
			documentName,
			deadline,
			expirationDate,
			payCondition,
			sum, discountName, discountRate, discount, taxRate, tax, sumWithTax, sumWithTax2,
			bankName,
			branchName,
			accountName,
			hurigana,
			accountNumber,
			depositeClassification,
			cautions,
			comment
		) 
		values(
			#{documentNum},#{documentTypeName},#{estimateDate},
			#{userNum}, #{userName}, #{userDepartment}, #{userPosition},
			#{stamp}, #{stampFileName}, #{logoFileName},
			#{receiver},
			#{address},
			#{documentName},
			#{deadline},
			#{expirationDate},
			#{payCondition},
			#{sum}, #{discountName}, #{discountRate}, #{discount}, #{taxRate}, #{tax}, #{sumWithTax}, #{sumWithTax2},
			#{bankName},
			#{branchName},
			#{accountName},
			#{hurigana},
			#{accountNumber},
			#{depositeClassification},	
			#{cautions},
			#{comment}
		);
		
		insert into estimateLanguageItems (
			documentNum,rowNum,itemName,amount,unitPrice,price
		)
		values
			<foreach collection="items" item="item" separator=",">
				(#{documentNum},#{item.rowNum},#{item.itemName},${item.amount},${item.unitPrice},${item.price})
			</foreach>
	</insert>
	
	<update id="updateEstimateLanguage" parameterType="estimateLanguageDTO">
		update estimateLanguage set
			estimateDate = #{estimateDate},
			userNum = #{userNum},
			userName = #{userName},
			userDepartment = #{userDepartment},
			userPosition = #{userPosition},
			stamp = #{stamp},
			stampFileName = #{stampFileName},
			logoFileName = #{logoFileName},
			receiver = #{receiver},
			address = #{address},
			documentName = #{documentName},
			deadline = #{deadline},
			expirationDate = #{expirationDate},
			payCondition = #{payCondition},
			cautions = #{cautions},
			sum = #{sum},
			discountName = #{discountName},
			discountRate = #{discountRate},
			discount = #{discount},
			taxRate = #{taxRate},
			tax = #{tax},
			sumWithTax = #{sumWithTax},
			sumWithTax2 = #{sumWithTax2},
			bankName = #{bankName},
			branchName = #{branchName},
			accountName = #{accountName},
			hurigana = #{hurigana},
			accountNumber = #{accountNumber},
			depositeClassification = #{depositeClassification},	
			comment = #{comment},
			updateDate = CURRENT_TIMESTAMP,
			updater = #{updater}
		where
			documentNum = #{documentNum};
			
		<foreach collection="items" item="item">
			update estimateLanguageItems set
				itemName = #{item.itemName}, amount = ${item.amount}, unitPrice = ${item.unitPrice}, price = ${item.price}
			where documentNum=#{documentNum} and rowNum = #{item.rowNum};
		</foreach>	
	</update>
	
<!-- ///////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- ///////////////////////////////////  estimateSi  //////////////////////////////////////////////// -->
	<insert id="insertEstimateSi" parameterType="estimateSiDTO">
		insert into estimateSi (
			documentNum,documentTypeName,estimateDate,
			userNum, userName, userDepartment, userPosition,
			stamp, stampFileName, logoFileName,
			
			receiver,
			address,
			documentName,
			workTime,
			supplyment,
			workPeriodStart,
			workPeriodEnd,
			workPlace,
			contractType,
			expirationDate,
			payCondition,
			requestNum,
			
			sum,taxRate,tax,sumWithTax, sumWithTax2,
			cautions,
			comment
		) 
		values(
			#{documentNum},#{documentTypeName},#{estimateDate},
			#{userNum}, #{userName}, #{userDepartment}, #{userPosition},
			#{stamp}, #{stampFileName}, #{logoFileName},
			
			#{receiver},
			#{address},
			#{documentName},
			#{workTime},
			#{supplyment},
			#{workPeriodStart},
			#{workPeriodEnd},
			#{workPlace},
			#{contractType},
			#{expirationDate},
			#{payCondition},
			#{requestNum},
			
			#{sum}, #{taxRate}, #{tax}, #{sumWithTax}, #{sumWithTax2},
			#{cautions},
			#{comment}
		);
		
		insert into estimateSiItems (
			documentNum,rowNum,item,itemName,workStart,workEnd,unitPrice,manMonth,price
		)
		values
			<foreach collection="items" item="item" separator=",">
				(#{documentNum},#{item.rowNum},#{item.item},#{item.itemName},#{item.workStart},#{item.workEnd},${item.unitPrice},${item.manMonth},${item.price})
			</foreach>
	</insert>
	
	<update id="updateEstimateSi" parameterType="estimateSiDTO">
		update estimateSi set
			estimateDate = #{estimateDate},
			userNum = #{userNum},
			userName = #{userName},
			userDepartment = #{userDepartment},
			userPosition = #{userPosition},
			stamp = #{stamp},
			stampFileName = #{stampFileName},
			logoFileName = #{logoFileName},
			
			receiver = #{receiver},
			address = #{address},
			documentName = #{documentName},
			workTime = #{workTime},
			supplyment = #{supplyment},
			workPeriodStart = #{workPeriodStart},
			workPeriodEnd = #{workPeriodEnd},
			workPlace = #{workPlace},
			contractType = #{contractType},
			expirationDate = #{expirationDate},
			payCondition = #{payCondition},
			requestNum = #{requestNum},
			
			cautions = #{cautions},
			sum = #{sum},
			taxRate = #{taxRate},
			tax = #{tax},
			sumWithTax = #{sumWithTax},
			sumWithTax2 = #{sumWithTax2},
			comment = #{comment},
			updateDate = CURRENT_TIMESTAMP,
			updater = #{updater}
		where
			documentNum = #{documentNum};
			
		<foreach collection="items" item="item">
			update estimateSiItems set
				item = #{item.item}, itemName = #{item.itemName}, workStart = #{item.workStart}, workEnd = #{item.workEnd}, manMonth = ${item.manMonth}, unitPrice = ${item.unitPrice}, price = ${item.price}
			where documentNum=#{documentNum} and rowNum = #{item.rowNum};
		</foreach>	
	</update>
	
	<insert id="testTest" parameterType="String">
		insert into test (col1,col2) values ("aaa",CURRENT_TIMESTAMP)
	</insert>
	
	<insert id="testTest2" parameterType="String">
		insert into test (col1,col2) values ("bbb",CURRENT_TIMESTAMP)
	</insert>
</mapper>