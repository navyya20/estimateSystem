<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="jp.co.interline.dao.WorkflowMapper">
	<select id="getWorkflowInformBySystemNum" parameterType="int" resultType="workflowInformDTO">
		select * from workflowInform where systemNum = #{systemNum}
	</select>
	<select id="getWorkflowInformWithNameBySystemNum" parameterType="int" resultType="workflowInformDTO">
		select w.*, u1.userName approver1Name, u2.userName approver2Name, u3.userName approver3Name from workflowInform w 
			left outer join userInform u1 on (w.approver1 = u1.userNum) 
			left outer join userInform u2 on (w.approver2 = u2.userNum)
			left outer join userInform u3 on (w.approver3 = u3.userNum)
		where w.systemNum = #{systemNum};
	</select>
	  
	<update id="updateWorkflowInform" parameterType="workflowInformDTO">
		update workflowInform set
			<choose>
				<when test="order == 1">
					approver1 = #{approver1}
				</when>
				<when test="order == 2">
					approver2 = #{approver2}
				</when>
				<when test="order == 3">
					approver3 = #{approver3}
				</when>
			</choose>
		where 
			systemNum = #{systemNum}
	</update>
	
	<update id="setWorkflowInformTargetKey" parameterType="workflowInformDTO">
		update workflowInform set
			targetKey=#{targetKey}
		where
			systemNum = #{systemNum}
	</update>
	
	<!-- 모든 테이블을 합쳐서 문서번호로 state를 찾는다.  -->
	<select id="getState" parameterType="String" resultType="String">
		select master.state from 
			(
					select documentNum, state 
				from 
					estimateSheet1 
				union
					select documentNum, state from billSheet1
			) master
		where
			master.documentNum = #{documentNum}
	</select>
	
	<insert id="insertWorkflow" parameterType="workflowDTO" useGeneratedKeys="true" keyProperty="workflowNum">
		insert into workflow (
			systemNum,
			userNum, 
			documentTypeName,
			documentNum,
			approver1,
			approver2,
			approver3,
			approver1State,
			approver2State,
			approver3State,
			presentApproverNum,
			presentApprover,
			targetKey,
			targetValue,
			updateDate,
			updater
		) values (
			#{systemNum},
			#{userNum},
			#{documentTypeName},
			#{documentNum},
			#{approver1},
			#{approver2},
			#{approver3},
			#{approver1State},
			#{approver2State},
			#{approver3State},
			#{presentApproverNum},
			#{presentApprover},
			#{targetKey},
			#{targetValue},
			CURRENT_TIMESTAMP,
			#{updater}
		)
	</insert>
	
	<select id="getWorkflowByWorkflowNum" parameterType="int" resultType="workflowDTO">
		select * from workflow where workflowNum = #{value}
	</select>
	<update id="renewWorkflow" parameterType="workflowDTO">
		update workflow set
			approver1State = #{approver1State},
			approver2State = #{approver2State},
			approver3State = #{approver3State},
			presentApprover = #{presentApprover},
			presentApproverNum = #{presentApproverNum},
			targetValue = #{targetValue},
			updateDate = CURRENT_TIMESTAMP,
			updater = #{updater}
		where
			workflowNum = #{workflowNum}
	</update>
	<update id="updateWorkflowNum">
		update documentMaster set
			workflowNum = #{workflowNum}
		where
			documentNum = #{documentNum}
	</update>
	<update id="updateState" parameterType="workflowDTO">
		update documentMaster set
			state = #{state}
			<if test='state == "app"'>
		    	,approvedDate = CURRENT_TIMESTAMP
		    </if>
		where
			documentNum = #{documentNum}
	</update>
	
	<select id="getNumberOfWorkflows" parameterType="int" resultType="int">
		select count(workflowNum) from workflow where presentApprover = #{value} and targetValue != 'aaa'
	</select>
	<select id="getWorkflowWaitingList" parameterType="int" resultType="workflowDTO">
		select w.*, u1.userName ,d1.department userDepartment, dt.explanation explanation,
				em.receiver, em.documentName
			from
				workflow w
			left outer join 
				userInform u1 on (w.userNum = u1.userNum)
			left outer join 
				department d1 on (u1.departmentNum = d1.departmentNum)
			left outer join
				documentType dt on (w.documentTypeName = dt.documentTypeName)
			join
				estimateMaster em
			on
				w.documentNum = em.documentNum
		where
			presentApprover = #{value} and targetValue != 'aaa'
	</select>
	
	<select id="getWorkflowByDocumentNum" parameterType="String" resultType="workflowDTO">
		select w.*, u1.userName ,d1.department userDepartment
			from
				workflow w 
			left outer join 
				userInform u1 on (w.userNum = u1.userNum)
			left outer join 
				department d1 on (u1.departmentNum = d1.departmentNum)
		where
			w.documentNum = #{documentNum}
	</select>
	
	<update id="updateApprove" parameterType="workflowDTO">
		update workflow set
			approver1State = #{approver1State},
			approver2State = #{approver2State},
			approver3State = #{approver3State},
			updateDate = CURRENT_TIMESTAMP,
			updater = #{updater}
		where
			documentNum = #{documentNum}
	</update>
	
	<delete	id="deleteWorkflow" parameterType="int">
		delete from workflow where workflowNum = #{workflowNum}
	</delete>
	
	<update id="stampConfirm" parameterType="systemDTO">
		update ${documentTypeName} set
			stamp=#{stampFileName},
			logoFileName=#{logoFileName}
		where
			documentNum=#{documentNum}
	</update>
	
	<select id="getSystemBySystemNum" parameterType="int" resultType="String">
		select systemName from systemType where systemNum = #{systemNum}
	</select>
	
	<update id="setfileName" parameterType="documentMasterDTO">
		update documentMaster set
			fileName = #{fileName}
		where
			documentNum = #{documentNum}
	</update>
	
	
	<select id="getTotalApprovedSheet" parameterType="userInformWithOptionDTO" resultType="int">
		select 
			count(wf.documentNum)
		from 
			(select *,if(approver3 = -1, if(approver2 = -1 , approver1, null), approver3) as approver from workflow) as wf 
			join 
				userInform as ui1 
			on 
				wf.userNum = ui1.userNum
			join
				userInform as ui2
			on
				wf.approver = ui2.userNum
			join
				documentType as dt
			on
				wf.documentTypeName = dt.documentTypeName
			join
				documentMaster dm
			on
				wf.documentNum = dm.documentNum
			join
				estimateMaster em
			on
				wf.documentNum = em.documentNum
			where
			<choose>
				<when test='auth == "u"'>
					wf.userNum=#{userNum} and
				</when>
				<when test='auth == "a"'>
					
				</when>
			</choose>
				dm.state = "app"
			order by ${option}
	</select>
	
	<select id="getApprovedList" parameterType="userInformWithOptionDTO" resultType="approvedListDTO">
		select 
			wf.workflowNum,
			wf.userNum,
			wf.documentTypeName,
			wf.documentNum,
			wf.insertDate,
			wf.updateDate,
			wf.updater,
			wf.approver, 
			ui1.userName,
			ui2.userName as approverName,
			dt.explanation,
			dm.state,
			dm.fileName,
			em.receiver,
			em.documentName
		from 
			(select *,if(approver3 = -1, if(approver2 = -1 , approver1, null), approver3) as approver from workflow) as wf 
			join 
				userInform as ui1 
			on 
				wf.userNum = ui1.userNum
			join
				userInform as ui2
			on
				wf.approver = ui2.userNum
			join
				documentType as dt
			on
				wf.documentTypeName = dt.documentTypeName
			join
				documentMaster dm
			on
				wf.documentNum = dm.documentNum
			join
				estimateMaster em
			on
				wf.documentNum = em.documentNum
			where
			<choose>
				<when test='auth == "u"'>
					wf.userNum=#{userNum} and
				</when>
				<when test='auth == "a"'>
					
				</when>
			</choose>
				dm.state = "app"
			order by ${option}
	</select>
</mapper>